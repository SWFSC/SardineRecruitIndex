 -nohess flag (1 means do Hessian): 1
#V3.30.18.00;_safe;_compile_date:_Sep 30 2021;_Stock_Synthesis_by_Richard_Methot_(NOAA)_using_ADMB_12.3
#_Stock_Synthesis_is_a_work_of_the_U.S._Government_and_is_not_subject_to_copyright_protection_in_the_United_States.
#_Foreign_copyrights_may_apply._See_copyright.txt_for_more_information.
#_User_support_available_at:NMFS.Stock.Synthesis@noaa.gov
#_User_info_available_at:https://vlab.noaa.gov/group/stock-synthesis
#_Source_code_at:_https://github.com/nmfs-stock-synthesis/stock-synthesis

data.ss  datfilename
control.ss  ctlfilename
0  readparfile
1  rundetail
1  reportdetail 0=minimal for data-limited, 1=all, 2=no growth, 3=custom
1 Y DEFINITIONS report:1
2 Y LIKELIHOOD report:2
3 Y Input_Variance_Adjustment report:3
4 Y Parm_devs_detail report:4
5 Y PARAMETERS report:5
6 Y DERIVED_QUANTITIES report:6
7 Y MGparm_By_Year_after_adjustments report:7
8 Y selparm(Size)_By_Year_after_adjustments report:8
9 Y selparm(Age)_By_Year_after_adjustments report:9
10 Y RECRUITMENT_DIST report:10
11 Y MORPH_INDEXING report:11
12 Y SIZEFREQ_TRANSLATION report:12
13 Y MOVEMENT report:13
14 Y EXPLOITATION report:14
15 Y CATCH report:15
16 Y TIME_SERIES report:16
17 Y SPR_SERIES report:17
18 Y Kobe_Plot report:18
19 Y SPAWN_RECRUIT report:19
20 Y SPAWN_RECR_CURVE report:20
21 Y INDEX_1 report:21 summary
22 Y INDEX_2 report:22 annual
23 Y INDEX_3 report:23 Qparms
24 Y DISCARD_SPECIFICATION report:24
25 Y DISCARD_OUTPUT report:25
26 Y MEAN_BODY_WT_OUTPUT report:26
27 Y FIT_LEN_COMPS report:27
28 Y FIT_AGE_COMPS report:28
29 Y FIT_SIZE_COMPS report:29
30 Y OVERALL_COMPS report:30
31 Y LEN_SELEX report:31
32 Y AGE_SELEX report:32
33 Y ENVIRONMENTAL_DATA report:33
34 Y TAG_Recapture report:34
35 Y NUMBERS_AT_AGE report:35
36 Y BIOMASS_AT_AGE report:36
37 Y NUMBERS_AT_LENGTH report:37
38 Y BIOMASS_AT_LENGTH report:38
39 Y F_AT_AGE report:39
40 Y CATCH_AT_AGE report:40
41 Y DISCARD_AT_AGE report:41
42 Y BIOLOGY report:42
43 Y Natural_Mortality report:43
44 Y AGE_SPECIFIC_K report:44
45 Y Growth_Parameters report:45
46 Y Seas_Effects report:46
47 Y Biology_at_age_in_endyr report:47
48 Y MEAN_BODY_WT(Begin) report:48
49 Y MEAN_SIZE_TIMESERIES report:49
50 Y AGE_LENGTH_KEY report:50
51 Y AGE_AGE_KEY report:51
52 Y COMPOSITION_DATABASE report:52
53 Y SELEX_database report:53
54 Y SPR/YPR_Profile report:54
55 Y GLOBAL_MSY report:55
56 Y SS_summary.sso report:56
57 Y rebuilder.sso report:57
58 Y SIStable.sso report:58
59 Y Dynamic_Bzero report:59
60 Y wtatage.ss_new report:60
0  docheckup
3  Do_ParmTrace
2  Do_CumReport
0  Do_all_priors
1  SoftBound
1  N_nudata
10  Turn_off_phase
10  MCeval burn_intvl
2  MCeval thin_intvl
0  jitter fraction for initial parm values
1981  STD_Yr_min
-2  STD_Yr_max (-1 for endyr; -2 for YrMax)
0  N extra STD years to read
1e-05  final_conv
0  retro_yr
1  Smry_Age
1  depletion_basis as read; this is also known as Bratio and is a std quantity; has multi-yr and log(ratio) options
Parse into: depletion_log(ratio): 0 depletion_multi-yr: 0 depletion_basis: 1
1  depletion_level
4  SPR_reporting
1  F_reporting quantity, e.g. 3=sum(apical Fs)
2  F_std basis as read
Parse into: F_std_log(ratio): 0 F_std_multi: 0 F_std_basis: 2
For Kobe plot, set depletion_basis=2; depletion_level=1.0; F_reporting=your choose; F_std_basis=2
Read files in 3.30 format
SS will continue reading from starter.ss until it reads 3.30
read MCMC_output_detail.MCMC_bump as a single real number;  separate values will be parsed from integer and fraction
MCMC output detail:  0
MCMC bump to R0:  0
Now get ALK tolerance (0.0 is OK for no compression; 0.1 is too big;  suggest 0.0001)
ALK tolerance:  0.0001
Now get random number seed; enter -1 to use long(time) as the seed
  finish reading starter.ss

1981 start year 
2023 end year 
2 N seasons 
 6 6 months/seas (fractions OK) 
2 Number of subseasons (even number only; min 2) for calculation of ALK 
 0.5 0.5 processed season duration (frac. of year) 
 0.25 0.25 processed subseason duration (frac. of year) 
 processed subseason cumulative annual time within season 
 0 0.25
 0 0.25
SPAWN month: 7; seas: 2; subseas_for_ALK: 1; timing_in_season: 0
1 N sexes 
Accumulator age 10
1 N_areas 
6 total number of fishing fleets and surveys 
rows are fleets; columns are: Fleet_#, fleet_type, timing, area, units, need_catch_mult
1 #  1 -1 1 1 0 # MexCal_S1
2 #  1 -1 1 1 0 # MexCal_S2
3 #  1 -1 1 1 0 # PNW
4 #  3 1 1 2 0 # AT_Survey
5 #  3 1 1 2 0 # DEPM
6 #  3 1 1 2 0 # TEP_all
YPR_optimize_mask:  1 1 1 0 0 0
261 records
first catch record:  -999 1 1 0 0.05
last catch record:  2023 1 3 1 0.05
 equ, seas:   -1 1 catches:  0 0 0 0 0 0
 equ, seas:   -1 2 catches:  0 1000 0 0 0 0
year, seas: 1981 1 catches:  0 0 0 0 0 0
year, seas: 1981 2 catches:  0 69.94 0 0 0 0
year, seas: 1982 1 catches:  1.74 0 0 0 0 0
year, seas: 1982 2 catches:  0 358.41 0 0 0 0
year, seas: 1983 1 catches:  9.16 0 0 0 0 0
year, seas: 1983 2 catches:  0 114.36 0 0 0 0
year, seas: 1984 1 catches:  67.46 0 0 0 0 0
year, seas: 1984 2 catches:  0 3497.6 0 0 0 0
year, seas: 1985 1 catches:  124.94 0 0 0 0 0
year, seas: 1985 2 catches:  0 1011.41 0 0 0 0
year, seas: 1986 1 catches:  47.54 0 0 0 0 0
year, seas: 1986 2 catches:  0 1336.79 0 0 0 0
year, seas: 1987 1 catches:  181.16 0 0 0 0 0
year, seas: 1987 2 catches:  0 3460.28 0 0 0 0
year, seas: 1988 1 catches:  350.23 0 0 0 0 0
year, seas: 1988 2 catches:  0 2214.38 0 0 0 0
year, seas: 1989 1 catches:  102.2 0 0 0 0 0
year, seas: 1989 2 catches:  0 6262.98 0 0 0 0
year, seas: 1990 1 catches:  137.92 0 0 0 0 0
year, seas: 1990 2 catches:  0 11178.3 0 0 0 0
year, seas: 1991 1 catches:  4361.7 0 0 0 0 0
year, seas: 1991 2 catches:  0 7402.98 0 0 0 0
year, seas: 1992 1 catches:  3919.25 0 3.9 0 0 0
year, seas: 1992 2 catches:  0 21070.8 0.18 0 0 0
year, seas: 1993 1 catches:  827.51 0 0 0 0 0
year, seas: 1993 2 catches:  0 11679.3 0 0 0 0
year, seas: 1994 1 catches:  8940.33 0 0 0 0 0
year, seas: 1994 2 catches:  0 40439.6 0 0 0 0
year, seas: 1995 1 catches:  6048.3 0 22.68 0 0 0
year, seas: 1995 2 catches:  0 26820.3 0 0 0 0
year, seas: 1996 1 catches:  12038.9 0 0 0 0 0
year, seas: 1996 2 catches:  0 19490 43.55 0 0 0
year, seas: 1997 1 catches:  13018.2 0 27.22 0 0 0
year, seas: 1997 2 catches:  0 24916.3 0.82 0 0 0
year, seas: 1998 1 catches:  19062.7 0 488.25 0 0 0
year, seas: 1998 2 catches:  0 63812.3 74.39 0 0 0
year, seas: 1999 1 catches:  15060.8 0 725.2 0 0 0
year, seas: 1999 2 catches:  0 58889.3 429.59 0 0 0
year, seas: 2000 1 catches:  23750.1 0 15586.2 0 0 0
year, seas: 2000 2 catches:  0 35341.4 2336.9 0 0 0
year, seas: 2001 1 catches:  11607.3 0 22546 0 0 0
year, seas: 2001 2 catches:  0 41513.1 3136.84 0 0 0
year, seas: 2002 1 catches:  16644.4 0 35525.7 0 0 0
year, seas: 2002 2 catches:  0 36906.8 597.29 0 0 0
year, seas: 2003 1 catches:  10410.7 0 37242.3 0 0 0
year, seas: 2003 2 catches:  0 22673 2618.43 0 0 0
year, seas: 2004 1 catches:  17143.1 0 46730.8 0 0 0
year, seas: 2004 2 catches:  0 25890.6 1016.32 0 0 0
year, seas: 2005 1 catches:  13803 0 54044.4 0 0 0
year, seas: 2005 2 catches:  0 15385.5 102 0 0 0
year, seas: 2006 1 catches:  20726.2 0 41504.4 0 0 0
year, seas: 2006 2 catches:  0 32380.8 2102 0 0 0
year, seas: 2007 1 catches:  46228.1 0 46225.3 0 0 0
year, seas: 2007 2 catches:  0 23701.3 0 0 0 0
year, seas: 2008 1 catches:  30249.2 0 39406 0 0 0
year, seas: 2008 2 catches:  0 26068.6 0 0 0 0
year, seas: 2009 1 catches:  14044.9 0 44824.3 0 0 0
year, seas: 2009 2 catches:  0 19501.5 858.75 0 0 0
year, seas: 2010 1 catches:  1787.27 0 54605.3 0 0 0
year, seas: 2010 2 catches:  0 15679.1 0 0 0 0
year, seas: 2011 1 catches:  24688.9 0 39750.8 0 0 0
year, seas: 2011 2 catches:  0 14694.2 5855 0 0 0
year, seas: 2012 1 catches:  1528.37 0 91722 0 0 0
year, seas: 2012 2 catches:  0 1057.01 1572 0 0 0
year, seas: 2013 1 catches:  811.29 0 55203 0 0 0
year, seas: 2013 2 catches:  0 4894.48 908 0 0 0
year, seas: 2014 1 catches:  1830.92 0 14664 0 0 0
year, seas: 2014 2 catches:  0 727.71 2162 0 0 0
year, seas: 2015 1 catches:  6.13 0 66 0 0 0
year, seas: 2015 2 catches:  0 1.05 1 0 0 0
year, seas: 2016 1 catches:  283.54 0 88 0 0 0
year, seas: 2016 2 catches:  0 144.72 0 0 0 0
year, seas: 2017 1 catches:  170.41 0 1 0 0 0
year, seas: 2017 2 catches:  0 176.7 2 0 0 0
year, seas: 2018 1 catches:  35.31 0 9 0 0 0
year, seas: 2018 2 catches:  0 478.89 4 0 0 0
year, seas: 2019 1 catches:  223.61 0 10 0 0 0
year, seas: 2019 2 catches:  0 395.43 0 0 0 0
year, seas: 2020 1 catches:  428.79 0 0 0 0 0
year, seas: 2020 2 catches:  0 224.36 3 0 0 0
year, seas: 2021 1 catches:  92.84 0 12 0 0 0
year, seas: 2021 2 catches:  0 193.05 0 0 0 0
year, seas: 2022 1 catches:  168.19 0 9 0 0 0
year, seas: 2022 2 catches:  0 339.83 0 0 0 0
year, seas: 2023 1 catches:  152.31 0 1 0 0 0
year, seas: 2023 2 catches:  0 0 0 0 0 0

#_show_total_catch_by_fleet
1 type: 1 MexCal_S1 catch: 321115
2 type: 1 MexCal_S2 catch: 623394
3 type: 1 PNW catch: 664868
4 type: 3 AT_Survey catch: 0
5 type: 3 DEPM catch: 0
6 type: 3 TEP_all catch: 0

#_  now read survey characteristics:  fleet_#, svyunits, svyerrtype for each fleet 
Units:  0=numbers; 1=biomass; 2=F; >=30 for special patterns
Errtype:  -1=normal; 0=lognormal; >0=T
SD_Report: 0=no sdreport; 1=enable sdreport
Fleet Units Err_Type SD_Report
 1 1 0 0
 2 1 0 0
 3 1 0 0
 4 1 0 0
 5 30 0 0
 6 30 0 0
57 nobs_survey 
 2005 10 4 1.94706e+06 0.3
 2007 10 4 751075 0.09
 2009 10 4 357006 0.41
 2010 10 4 493672 0.3
 2011 10 4 469480 0.28
 2012 10 4 305146 0.24
 2013 10 4 35339 0.38
 2014 10 4 29048 0.29
 2015 10 4 83030 0.47
 2008 1 4 801000 0.3
 2012 1 4 340831 0.33
 2013 1 4 306191 0.293
 2014 1 4 26279 0.697
 2015 1 4 16375 0.94
 2016 1 4 72867 0.497
 2017 1 4 14103 0.3
 2018 1 4 25148 0.67
 2019 1 4 33632 0.19
 2021 1 4 40528 0.37
 2022 1 4 69506 0.21
 2023 1 4 77252 0.47
 1986 1 5 4061 0.6
 1987 1 5 8661 0.56
 1993 10 5 69065 0.29
 2003 10 5 145274 0.23
 2004 10 5 459943 0.55
 2006 10 5 198404 0.3
 2007 10 5 66395 0.27
 2008 10 5 99162 0.24
 2009 10 5 58447 0.4
 2010 10 5 219386 0.27
 2011 10 5 113178 0.27
 2012 10 5 82182 0.29
 2014 10 5 19376 0.54
 1986 1 6 11220 0.73
 1987 1 6 25637 0.48
 1987 10 6 17266 0.35
 1993 10 6 73374 0.21
 1995 10 6 97923 0.4
 1996 10 6 482246 0.21
 1997 10 6 369775 0.33
 1998 10 6 332177 0.34
 1999 10 6 1.25254e+06 0.39
 2000 10 6 931377 0.38
 2001 10 6 236660 0.17
 2002 10 6 556177 0.18
 2003 10 6 307795 0.24
 2004 10 6 486950 0.4
 2005 10 6 651994 0.25
 2006 10 6 306297 0.26
 2007 10 6 128118 0.21
 2008 10 6 162188 0.22
 2009 10 6 97838 0.39
 2010 10 6 364798 0.26
 2011 10 6 227632 0.27
 2012 10 6 198472 0.29
 2014 10 6 30396 0.66
Successful read of survey data; total N:  57
Index Survey_name       N   Super_Per    Min_val   max_val  //  Observations:
4    AT_Survey   21     0      14103 1.94706e+06 //  1.94706e+06 751075 357006 493672 469480 305146 35339 29048 83030 801000 340831 306191 26279 16375 72867 14103 25148 33632 40528 69506 77252
5    DEPM   13     0      4061 459943 //  4061 8661 69065 145274 459943 198404 66395 99162 58447 219386 113178 82182 19376
6    TEP_all   23     0      11220 1.25254e+06 //  11220 25637 17266 73374 97923 482246 369775 332177 1.25254e+06 931377 236660 556177 307795 486950 651994 306297 128118 162188 97838 364798 227632 198472 30396
Number of sdreport index values: 0
 note order of discard read is now: N fleets with disc, then if Ndisc_fleets>0 read:  fleet, disc_units, disc_error(for 1,Ndisc_fleets), then read obs 
0 N fleets with discard 
Successful read of discard data  
Index Survey_name       N   Super_Per    Min_val   max_val  //  Observations:
0 Use mean body size (weight or length); If 0, then no additional input in 3.30 
Successful pre-processing of mean-bodysize data
2 LenBin_option:  1=set to data bins; 2 generate uniform; 3 = read custom
 0.5 6 30 input for setup of pop length bins 
1 indicator for length data  
#_now read for each fleet info for processing the length comps:
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=Dirichlet
#_Comp_ERR-2:  index of Dirichlet parameter to use
#_minsamplesize: minimum sample size; set to 1 to match 3.24, set to 0 for no minimum
-0.0001 0.0001 0 0 0 0 1  #_fleet: 1 MexCal_S1
-0.0001 0.0001 0 0 0 0 1  #_fleet: 2 MexCal_S2
-0.0001 0.0001 0 0 0 0 1  #_fleet: 3 PNW
-0.0001 0.0001 0 0 0 0 1  #_fleet: 4 AT_Survey
-0.0001 0.0001 0 0 0 0 1  #_fleet: 5 DEPM
-0.0001 0.0001 0 0 0 0 1  #_fleet: 6 TEP_all
number of D-M parameters needed for length comp data: 0

39 nlen_bin_for_data 
 len_bins_dat 
 9 9.5 10 10.5 11 11.5 12 12.5 13 13.5 14 14.5 15 15.5 16 16.5 17 17.5 18 18.5 19 19.5 20 20.5 21 21.5 22 22.5 23 23.5 24 24.5 25 25.5 26 26.5 27 27.5 28

Processed Population length bin info 
 6 6.5 7 7.5 8 8.5 9 9.5 10 10.5 11 11.5 12 12.5 13 13.5 14 14.5 15 15.5 16 16.5 17 17.5 18 18.5 19 19.5 20 20.5 21 21.5 22 22.5 23 23.5 24 24.5 25 25.5 26 26.5 27 27.5 28 28.5 29 29.5 30

Processed Data length bin info 
 9 9.5 10 10.5 11 11.5 12 12.5 13 13.5 14 14.5 15 15.5 16 16.5 17 17.5 18 18.5 19 19.5 20 20.5 21 21.5 22 22.5 23 23.5 24 24.5 25 25.5 26 26.5 27 27.5 28

Processed Population to Data length bin conversion matrix
len_obs_#:1 #  -9999 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 N length comp observations 
Lendata Nobs by fleet  0 0 0 0 0 0
Lendata superperiods by fleet  0 0 0 0 0 0
Overall_Compositions
Fleet len_bins  9 9.5 10 10.5 11 11.5 12 12.5 13 13.5 14 14.5 15 15.5 16 16.5 17 17.5 18 18.5 19 19.5 20 20.5 21 21.5 22 22.5 23 23.5 24 24.5 25 25.5 26 26.5 27 27.5 28
Successful processing of length data

Enter the number of agebins, or 0 if no age data
9 N age bins 
 0 1 2 3 4 5 6 7 8 agebins 
10 N age error defs 
ageerror_definitions_as_read
 0.5 1.5 2.5 3.5 4.5 5.5 6.5 7.5 8.5 9.5 10.5
 0.2832 0.2832 0.289 0.8009 0.8038 0.9597 1.1156 1.2715 1.4274 1.5833 1.7392
 0.5 1.5 2.5 3.5 4.5 5.5 6.5 7.5 8.5 9.5 10.5
 0.2539 0.2539 0.3434 0.9205 0.9653 1.1743 1.3832 1.5922 1.8011 2.0101 2.219
 0.5 1.5 2.5 3.5 4.5 5.5 6.5 7.5 8.5 9.5 10.5
 0.4032 0.4032 0.4995 0.58 0.6902 0.8246 0.9727 1.0165 1.1144 1.2123 1.3102
 0.5 1.5 2.5 3.5 4.5 5.5 6.5 7.5 8.5 9.5 10.5
 0.2825 0.2825 0.2955 0.3125 0.3347 0.3637 0.4017 0.4046 0.4245 0.4445 0.4645
 0.5 1.5 2.5 3.5 4.5 5.5 6.5 7.5 8.5 9.5 10.5
 0.26655 0.30145 0.3149 0.3615 0.3847 0.3961 0.4018 0.4047 0.4061 0.4352 0.4487
 0.5 1.5 2.5 3.5 4.5 5.5 6.5 7.5 8.5 9.5 10.5
 0.5386 0.5386 0.7547 0.8341 0.8634 0.8741 0.8781 0.8796 0.8801 0.8801 0.8801
 0.5 1.5 2.5 3.5 4.5 5.5 6.5 7.5 8.5 9.5 10.5
 0.3 0.3 0.17 0.16 0.21 0.37 0.78 0.78 0.78 0.78 0.78
 0.5 1.5 2.5 3.5 4.5 5.5 6.5 7.5 8.5 9.5 10.5
 0.17 0.17 0.43 0.53 0.57 0.58 0.58 0.59 0.59 0.59 0.59
 0.5 1.5 2.5 3.5 4.5 5.5 6.5 7.5 8.5 9.5 10.5
 0.18 0.18 0.5 0.62 0.66 0.68 0.69 0.69 0.69 0.69 0.69
 0.5 1.5 2.5 3.5 4.5 5.5 6.5 7.5 8.5 9.5 10.5
 0.14 0.14 0.41 0.51 0.55 0.56 0.57 0.57 0.57 0.57 0.57
#_now read for each fleet info for processing the age comps:
#_mintailcomp: upper and lower distribution for females and males separately are accumulated until exceeding this level.
#_addtocomp:  after accumulation of tails; this value added to all bins
#_males and females treated as combined gender below this bin number 
#_compressbins: accumulate upper tail by this number of bins; acts simultaneous with mintailcomp; set=0 for no forced accumulation
#_Comp_Error:  0=multinomial, 1=dirichlet
#_Comp_ERR-2:  index of parameter to use, cumulative count after DM parms for length comp
#_minsamplesize: minimum sample size; set to 1 to match 3.24, set to 0 for no minimum
-0.0001 0.0001 -1 0 0 0 1  #_fleet: 1 MexCal_S1
-0.0001 0.0001 -1 0 0 0 1  #_fleet: 2 MexCal_S2
-0.0001 0.0001 -1 0 0 0 1  #_fleet: 3 PNW
-0.0001 0.0001 -1 0 0 0 1  #_fleet: 4 AT_Survey
-0.0001 0.0001 -1 0 0 0 1  #_fleet: 5 DEPM
-0.0001 0.0001 -1 0 0 0 1  #_fleet: 6 TEP_all
number of D-M parameters needed for length and age comp data: 0
3 Lbin method for defined size ranges 
age_obs_#:1 #  1982 4 1 0 0 1 -1 -1 1.6 0 0 0.4 0.525 0.075 0 0 0 0
age_obs_#:2 #  1983 4 1 0 0 1 -1 -1 1.36 0 0.264706 0.705882 0.0294118 0 0 0 0 0
94 N age comp observations 
age_obs_#:94 #  2023 1 4 0 0 10 -1 -1 9 0.101098 0.0432556 0.129975 0.647737 0.0614802 0.010762 0.00287737 0.0020675 0.000746943

Age_Data Nobs by fleet  31 41 10 12 0 0
Age_Data superperiods by fleet  0 0 0 0 0 0
process age comps 
Fleet age_bins  0 1 2 3 4 5 6 7 8
1 freq  0.0571612 0.357364 0.373567 0.143454 0.0482387 0.0148018 0.00409616 0.000954875 0.000361159
1 cuml  0.0571612 0.414526 0.788093 0.931547 0.979786 0.994588 0.998684 0.999639 1
2 freq  0.211741 0.343204 0.251176 0.0966297 0.0441188 0.0280414 0.0138857 0.00605654 0.00514652
2 cuml  0.211741 0.554945 0.806121 0.902751 0.94687 0.974911 0.988797 0.994853 1
3 freq  9.99101e-05 0.00250704 0.102458 0.23639 0.271287 0.182695 0.10444 0.0557368 0.0443853
3 cuml  9.99101e-05 0.00260695 0.105065 0.341455 0.612743 0.795438 0.899878 0.955615 1
4 freq  0.155429 0.11541 0.242095 0.277721 0.119962 0.0456965 0.027103 0.0108409 0.00574353
4 cuml  0.155429 0.270839 0.512934 0.790654 0.910616 0.956313 0.983416 0.994256 1
5 freq  0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111
5 cuml  0.111111 0.222222 0.333333 0.444444 0.555556 0.666667 0.777778 0.888889 1
6 freq  0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111 0.111111
6 cuml  0.111111 0.222222 0.333333 0.444444 0.555556 0.666667 0.777778 0.888889 1

Successful processing of age data 
0 (0/1) use mean size-at-age data 
0 N_envvar 
0 N sizefreq methods to read 
 finished processing sizefreq data 
0 Do_TagData(0/1) 
0 Do_Morphcomp(0/1) 
Do dataread for selectivity priors(0/1):  0
Yr  Seas Fleet  Age/Size  Bin  selex_prior  prior_sd
feature not yet implemented
 data read successful

read Do_Benchmark(0=skip; 1= do Fspr, Fbtgt, Fmsy; 2=do Fspr, F0.1, Fmsy;  3=Fspr, Fbtgt, Fmsy, F_Blimit)
1 echoed Do_Benchmark 
read Do_MSY (1=F_SPR,2=F_Btarget,3=calcMSY,4=mult*F_endyr (disabled))
2 echoed Do_MSY basis
next read SPR target and Biomass target as fractions
0.4 echoed SPR_target 
0.4 echoed B_target 
next read 10 Benchmark years for:  beg-end bio; beg-end selex; beg-end relF; beg-end recr_dist; beg-end SRparm
codes: -999 means start year; >0 is an actual year; <=0 is relative to endyr
 2023 2023 2015 2023 2005 2023 2005 2023 1981 2023 echoed Benchmark years
 2023 2023 2015 2023 2005 2023 2005 2023 1981 2023 Benchmark years as processed
next read:  1=use range of years as read for relF; 2 = set same as forecast relF below
1  echoed Bmark_RelF_year basis

next read forecast basis: 0=none; 1=F(SPR); 2=F(MSY) 3=F(Btgt); 4=Ave F (enter yrs); 5=read Fmult
1 echoed Forecast basis

#next read N forecast years
1 #echoed N_Fcast_Yrs 

# next read Fmult value to be used only if Forecast basis==5
0 # echoed Fmult value

# next enter Fcast_years:  beg_selex, end_selex, beg_relF, end_relF, beg_recruits, end_recruits
# enter actual year, or values of 0 or -integer to be relative to endyr)
 0 0 0 0 -999 0 # echoed Fcast years as read
 2023 2023 2023 2023 1981 2023  # After Transformation

# next read flag for specifying selectivity used in forecasts; 0 is value that mimics 3.24, 1 is experimental
0 # echoed Fcast_Specify_Selex value

next read 4 values for:  control rule shape(0, 1, 2, 3 or 4), inflection (like 0.40), cutoff(like 0.10), scale(like 0.75)
1  # echoed HarvestPolicy 
0.5   # echoed harvest policy inflection 
0.1   # echoed harvest policy cutoff 
0.75   # echoed harvest policy scalar 

# next enter 2 values that control looping through the forecast (see manual), then 3 placeholder values
# first does F_msy or proxy; 2nd applies control rule; 3rd applies caps and allocations
3 #echoed N forecast loops (1-3) (recommend 3)
3 #echoed First forecast loop with stochastic recruitment (recommend 3)
0 #echoed Forecast recruitment:  0=spawn_recr; 1=value*spawn_recr; 2=value*VirginRecr; 3=mean from year range
1 #echoed Forecast loop control #4 (not used) 
0 #echoed Forecast loop control #5 (reserved for future use) 

#next enter year in which Fcast loop 3 caps and allocations begin to be applied
2024 # echoed value

#next enter 0, or stddev of implementation error
0 # echoed value

#next select rebuilding program output (0/1)
0 # echoed value

#next select rebuilding program:  year declared overfished
0 # echoed value

#next select rebuilding program:  year rebuilding plan started
0 # echoed value

#next select fleet relative F:  1=use first-last alloc year read above; 2=read list of seas, fleet, relF below
# Note that fleet allocation is used directly as average F if Do_Forecast=4 
1 # echoed value

#next read Catch Basis for caps and allocations;  Same for all fleets
2=dead catch bio, 3=retained catch bio, 5= dead catch numbers 6=retained catch numbers
2 # echoed value

# next read list of fleet ID and max annual catch;  end with fleet=-9999
 -9999 -1
 Processed Max totalcatch by fleet 
 -1 -1 -1 -1 -1 -1

Read list of area ID and max annual catch;  end with area=-9999
 -9999 -1
 processed Max totalcatch by area 
 -1

Read list of fleet ID and assignment to allocation group;  end with fleet ID=-9999
fishing fleets not assigned to allocation group are processed normally
 -9999 -1
 Processed Fleet allocation group assignments 
 0 0 0 0 0 0
99 # basis for input Fcast catch:  -1= read with each obs; 2=dead catch; 3=retained catch; 99=input Hrate(F); -1=read fleet/time specific (bio/num units are from fleetunits; note new codes in SSV3.20)
# yr seas fleet catch
 2024 1 1 0.0136477
 2024 2 1 0
 2024 1 2 0
 2024 2 2 0
 2024 1 3 0
 2024 2 3 0
 -9999 1 1 0
0  2024 1 1 0.0136477
1  2024 2 1 0
2  2024 1 2 0
3  2024 2 2 0
4  2024 1 3 0
5  2024 2 3 0
fill H4010_scale_vec with single input
H4010_scale:  0.75
 done reading forecast 

SPR_reporting 4
F_reporting 1
Finished creating STD containers and indexes 
 STD_SSB_Recr  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
 STD_deplet  0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
 STD_SPR  0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44
 STD_F  0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44

 Begin reading control file 
1 wtatage switch 
1 N growth patterns 
1  N platoons (1, 3 or 5)
  do not read sd_ratio or platoon_distr
4  # Recruitment distribution method; where: 2=parms for main effects for GP, Area, Settle timing; 3=one parm for each Settle event
1  # future option for recr_dist_area: 1 is hardwired to do global SRR; 2 in future will do area-specific SRR
1 Number of settlement events: GP/area/month to read (>=0) 
0  # unused option 
 settlement pattern as read 
GPat  Month  Area Age
* 1 1 1 0*
Now calculate the number of unique settle timings, which will dictate the number of recr_dist_timing parameters 
N settle timings: 1
 unique_settle_times: 
 1 0
settle events use these settle_times:  1
Calculated assignments in which settlement occurs 
Settle_event / Month / Seas / Seas_from_spawn / time_from_seas_start / age_at_settle
1 / 1  /  1 / 1 / 0  / 0

MORPH_INDEXING
g Sex GP Settlement Birth_Seas Platoon Platoon% Sex*GP Sex*GP*settle_time Used(0/1) SettleTime_frac_yr
1   1  1       1       1       1       100       1        1               1       0
calen_age is elapsed years since beginning of year in which spawning occurred
real_age is elapsed years since settlement
g  s  subseas  ALK_idx settle_time age@settle age real_age calen_age
1 1 1 1 1 0 0 0 0
1 1 1 1 1 0 1 1 1
1 1 1 1 1 0 2 2 2
1 1 1 1 1 0 3 3 3
1 1 2 2 1 0 0 0.25 0.25
1 1 2 2 1 0 1 1.25 1.25
1 1 2 2 1 0 2 2.25 2.25
1 1 2 2 1 0 3 3.25 3.25
1 2 1 3 1 0 0 0.5 0.5
1 2 1 3 1 0 1 1.5 1.5
1 2 1 3 1 0 2 2.5 2.5
1 2 1 3 1 0 3 3.5 3.5
1 2 2 4 1 0 0 0.75 0.75
1 2 2 4 1 0 1 1.75 1.75
1 2 2 4 1 0 2 2.75 2.75
1 2 2 4 1 0 3 3.75 3.75
 only 1 area, so no read of do_migration or migr_firstage 
7 N_Block_Designs
 1 16 16 8 5 37 14 N_Blocks_per design
 block design #: 1  read year pairs:  1980 1980
 block design #: 2  read year pairs:  2007 2007 2008 2008 2009 2009 2010 2010 2011 2011 2012 2012 2013 2013 2014 2014 2015 2015 2016 2016 2017 2017 2018 2018 2019 2019 2021 2021 2022 2022 2023 2023
 block design #: 3  read year pairs:  1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014
 block design #: 4  read year pairs:  1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014
 block design #: 5  read year pairs:  2015 2019 2020 2020 2021 2021 2022 2022 2023 2023
 block design #: 6  read year pairs:  1983 1983 1984 1984 1985 1985 1986 1986 1987 1987 1988 1988 1989 1989 1990 1990 1991 1991 1992 1992 1993 1993 1994 1994 1995 1995 1996 1996 1997 1997 1998 1998 1999 1999 2000 2000 2001 2001 2002 2002 2003 2003 2004 2004 2005 2005 2006 2006 2007 2007 2008 2008 2009 2009 2010 2010 2011 2011 2012 2012 2013 2013 2014 2014 2015 2015 2016 2016 2017 2017 2018 2018 2019 2019
 block design #: 7  read year pairs:  1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014
1  timevarying parameter constraint method
 1 1 1 1 1  timevarying parameter autogenerate (0) or read (1) for each parm type or (2) read then autogen if parm min==-12345
0 natM_type
1 growth model 
 0.5 999 -999 0 # growth specifications: AFIX1 AFIX2 LINF_decay placeholder  age-specific_K_ages
 N_growparms  5
g a seas subseas ALK_idx real_age calen_age lin_grow first_grow_age
1 0 1 1 1 0 0 0 0
1 0 1 2 2 0.25 0.25 0.5 0
1 0 2 1 3 0.5 0.5 1 0
1 0 2 2 4 0.75 0.75 -1 0
1 1 1 1 1 1 1 -1 0
1 1 1 2 2 1.25 1.25 -1 1
1 1 2 1 3 1.5 1.5 -2 1
1 1 2 2 4 1.75 1.75 -2 1
1 2 1 1 1 2 2 -2 1
1 2 1 2 2 2.25 2.25 -2 1
1 2 2 1 3 2.5 2.5 -2 1
1 2 2 2 4 2.75 2.75 -2 1
1 3 1 1 1 3 3 -2 1
1 3 1 2 2 3.25 3.25 -2 1
1 3 2 1 3 3.5 3.5 -2 1
1 3 2 2 4 3.75 3.75 -2 1
0  SD_add_to_LAA
0  CV_depvar
5  Maturity_Option
 fecundity and weight at age to be read from file:  wtatage.ss
0  First_Mature_Age
1  Fecundity option
0  Hermaphro_Option: 0 means No; 1 for F to M; -1 for M to F
1  MGparm_def
 predparm pointer -1 -1 -1 -1 -1 -1 14
 Biology base parameter setup 14
1  0.199 0.936 0.585 0 99 0 -2 0 0 0 0 0 0 0 NatM_uniform_Fem_GP_1
2  3 30 8 0 99 0 3 0 0 0 0 0 0 0 L_at_Amin_Fem_GP_1
3  15 40 26.7199 0 99 0 3 0 1 1982 2019 4 0 0 L_at_Amax_Fem_GP_1
4  0.05 0.99 0.721427 0 99 0 3 0 0 0 0 0 0 0 VonBert_K_Fem_GP_1
5  0.05 0.5 0.164739 0 99 0 3 0 0 0 0 0 0 0 CV_young_Fem_GP_1
6  0.01 0.1 0.0396945 0 99 0 3 0 0 0 0 0 0 0 CV_old_Fem_GP_1
7  -3 3 7.5242e-06 0 99 0 -3 0 0 0 0 0 0 0 Wtlen_1_Fem_GP_1
8  -3 5 3.2332 0 99 0 -3 0 0 0 0 0 0 0 Wtlen_2_Fem_GP_1
9  9 19 15.44 0 99 0 -3 0 0 0 0 0 0 0 Mat50%_Fem_GP_1
10  -20 3 -0.89252 0 99 0 -3 0 0 0 0 0 0 0 Mat_slope_Fem_GP_1
11  0 10 1 0 99 0 -3 0 0 0 0 0 0 0 Eggs/kg_inter_Fem_GP_1
12  -1 5 0 0 99 0 -3 0 0 0 0 0 0 0 Eggs/kg_slope_wt_Fem_GP_1
13  0.1 10 1 1 1 6 -1 0 1 1982 2019 5 0 0 CohortGrowDev
14  1e-06 0.999999 0.5 0.5 0.5 0 -99 0 0 0 0 0 0 0 FracFemale_GP_1
mgparm_type for each parm: 1=M; 2=growth; 3=wtlen,mat,fec,hermo; 4=recr&femfrac; 5=migr; 6=ageerror; 7=catchmult
 1 2 2 2 2 2 3 3 3 3 3 3 2 4
Now read env, block/trend, and dev adjustments to MGparms 

 timevary for MG parameter: 3
baseparm:  15 40 26.7199 0 99 0 3 0 1 1982 2019 4 0 0
parameter dev vector created with phase set to: 4
dev vec: 1 with link: 1 min, max year  1982 2019
timevary_setup 1 3 1 0 0 0 0 1 1 1982 2019 4 3 0

 timevary for MG parameter: 13
baseparm:  0.1 10 1 1 1 6 -1 0 1 1982 2019 5 0 0
parameter dev vector created with phase set to: 5
dev vec: 2 with link: 1 min, max year  1982 2019
timevary_setup 1 13 3 0 0 0 0 2 1 1982 2019 5 13 0
Display timevary_MG flag
1980 timevary_MG:  0 0 0 0 0 0 0 0
1981 timevary_MG:  0 0 0 0 0 0 0 0
1982 timevary_MG:  1 0 1 0 0 0 0 0
1983 timevary_MG:  1 0 1 0 0 0 0 0
1984 timevary_MG:  1 0 1 0 0 0 0 0
1985 timevary_MG:  1 0 1 0 0 0 0 0
1986 timevary_MG:  1 0 1 0 0 0 0 0
1987 timevary_MG:  1 0 1 0 0 0 0 0
1988 timevary_MG:  1 0 1 0 0 0 0 0
1989 timevary_MG:  1 0 1 0 0 0 0 0
1990 timevary_MG:  1 0 1 0 0 0 0 0
1991 timevary_MG:  1 0 1 0 0 0 0 0
1992 timevary_MG:  1 0 1 0 0 0 0 0
1993 timevary_MG:  1 0 1 0 0 0 0 0
1994 timevary_MG:  1 0 1 0 0 0 0 0
1995 timevary_MG:  1 0 1 0 0 0 0 0
1996 timevary_MG:  1 0 1 0 0 0 0 0
1997 timevary_MG:  1 0 1 0 0 0 0 0
1998 timevary_MG:  1 0 1 0 0 0 0 0
1999 timevary_MG:  1 0 1 0 0 0 0 0
2000 timevary_MG:  1 0 1 0 0 0 0 0
2001 timevary_MG:  1 0 1 0 0 0 0 0
2002 timevary_MG:  1 0 1 0 0 0 0 0
2003 timevary_MG:  1 0 1 0 0 0 0 0
2004 timevary_MG:  1 0 1 0 0 0 0 0
2005 timevary_MG:  1 0 1 0 0 0 0 0
2006 timevary_MG:  1 0 1 0 0 0 0 0
2007 timevary_MG:  1 0 1 0 0 0 0 0
2008 timevary_MG:  1 0 1 0 0 0 0 0
2009 timevary_MG:  1 0 1 0 0 0 0 0
2010 timevary_MG:  1 0 1 0 0 0 0 0
2011 timevary_MG:  1 0 1 0 0 0 0 0
2012 timevary_MG:  1 0 1 0 0 0 0 0
2013 timevary_MG:  1 0 1 0 0 0 0 0
2014 timevary_MG:  1 0 1 0 0 0 0 0
2015 timevary_MG:  1 0 1 0 0 0 0 0
2016 timevary_MG:  1 0 1 0 0 0 0 0
2017 timevary_MG:  1 0 1 0 0 0 0 0
2018 timevary_MG:  1 0 1 0 0 0 0 0
2019 timevary_MG:  1 0 1 0 0 0 0 0
2020 timevary_MG:  1 0 1 0 0 0 0 0
2021 timevary_MG:  1 0 1 0 0 0 0 0
2022 timevary_MG:  1 0 1 0 0 0 0 0
2023 timevary_MG:  1 0 1 0 0 0 0 0
2024 timevary_MG:  1 0 1 0 0 0 0 0
seasonal effects as read:  0 0 0 0 0 0 0 0 0 0
MG_active  1 0 1 0 0 0 0 0
3 #_SR_function: 1=NA; 2=Ricker(2 parms); 3=BevHolt(2); 4=SCAA(2); 5=Hockey(3); 6=B-H_flattop(2); 7=Survival(3); 8=Shepherd(3); 9=Ricker_Power(3) 
0  # 0/1 to use steepness in initial equ recruitment calculation
0  #  future feature:  0/1 to make realized sigmaR a function of SR curvature
 SR parms 
 3 25 15.3516 0 99 0 1 0 0 0 0 0 0 0
 0.2 1 0.5 0 99 0 -5 0 0 0 0 0 0 0
 0 2 1 0 99 0 -3 0 0 0 0 0 0 0
 -15 15 0 0 99 0 -1 0 0 0 0 0 1 2
 0 0 0 0 99 0 -3 0 0 0 0 0 0 0
 Do recruitment_autocorr: 0
 timevary for SR parm: 4
 timevary SR parms will be read, not autogenerated 
 check for env 0
baseparm:  -15 15 0 0 99 0 -1 0 0 0 0 0 1 2
block pattern: 1 method 2 Nblocks: 1
 create parm for block 1
 block method 2
read timevary block parameter:  -15 15 -2.25458 0 99 0 4
timevary_setup 2 4 5 1 2 0 0 0 0 0 0 0 22 0
 SR timevary_parm_cnt start and end 5 5
link to timevary parms:   0 0 0 3 0
SR_Npar and N_SRparm2 and N_SRparm3:  2 5 6
5 6  -15 15 -2.25458 0 99 0 4
SR_parm_RD:  15.3516 0.5 1 0 0 -2.25458
1 do_recdev
1983 recdev_start
2023 recdev_end
1 recdev_PH
1 recdev_adv
#_start of advanced SR options
-6 #_recdev_early_start (0=none; neg value makes relative to recdev_start)
2 #_recdev_early_phase
0 #_forecast_recruitment phase (incl. late recr) (0 value resets to maxphase+1)
1 #_lambda for Fcast_recr_like occurring before endyr+1
1976.1 #_last_early_yr_nobias_adj_in_MPD
1984.2 #_first_yr_fullbias_adj_in_MPD
2020.8 #_last_yr_fullbias_adj_in_MPD
2023.1 #_first_recent_yr_nobias_adj_in_MPD
0.9365 #_max_bias_adj_in_MPD
 #_NOTE: biasadjustment forced to 0.0 after year recdev_end
0 # period of cycle in recruitment 
-5 #min rec_dev
5 #max rec_dev
0 #_read_recdevs
#_end of advanced SR options
#_recruitment bias adjustment
 0 0 0 0 0 0 0.104056 0.219673 0.33529 0.450907 0.566525 0.682142 0.797759 0.913377 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.9365 0.855065 0.447891 0.0407174 0
0.1 F ballpark is annual F, as specified in F_reporting, for a specified year
-2006 F_ballpark_yr (<0 to ignore)  
3 F_Method as read
4 max_harvest_rate 
10 N iterations for tuning hybrid F (typically 3-5)
 ready to read init_F setup for: 1 fleet x season with initial equilibrium catch
 initial equil F parameter setup
 0 10 2.64995 0 99 0 1
7  Overall F_Method_byPH:   3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3
# read Q setup only for fleets with survey/CPUE/effort observations, end with fleet_ID<0 #  fleet_ID link_type link_info  extra_se(0/1)   biasadj(0/1)  float(0/1)
q setup 
 0 0 0 0 0
 0 0 0 0 0
 0 0 0 0 0
 1 0 0 0 0
 1 0 0 0 0
 1 0 0 0 0
q setup 
 0 0 0 0 0
 0 0 0 0 0
 0 0 0 0 0
 1 0 0 0 0
 1 0 0 0 0
 1 0 0 0 0
q setup parms 
 0 0 0 0 0
 0 0 0 0 0
 0 0 0 0 0
 1 0 0 0 0
 2 0 0 0 0
 3 0 0 0 0
fleet 4 base index 1

 timevary Q for fleet: 4
 check for env 0
baseparm:  -3 3 0 0 99 0 -2 0 0 0 0 0 5 2
block pattern: 5 method 2 Nblocks: 5
 create parm for block 1
 block method 2
read timevary block parameter:  0 3 -0.311 0 99 0 -1
 create parm for block 2
 block method 2
read timevary block parameter:  -3 3 -0.53 0 99 0 -1
 create parm for block 3
 block method 2
read timevary block parameter:  -3 3 -0.311 0 99 0 -1
 create parm for block 4
 block method 2
read timevary block parameter:  -3 3 0 0 99 0 -1
 create parm for block 5
 block method 2
read timevary block parameter:  -3 3 0 0 99 0 -1
timevary_setup 3 1 6 5 2 0 0 0 0 0 0 0 74 0
fleet 5 base index 2
fleet 6 base index 3
Q  uses timevary parms:   4 0 0
 Q  timevary_parm_cnt start and end 6 10
Q_Npar and Q_Npar2:  3 8
6 4  0 3 -0.311 0 99 0 -1
7 5  -3 3 -0.53 0 99 0 -1
8 6  -3 3 -0.311 0 99 0 -1
9 7  -3 3 0 0 99 0 -1
10 8  -3 3 0 0 99 0 -1
Q_parm_RD: 
1 0 LnQ_base_AT_Survey(4)
2 -1.83 LnQ_base_DEPM(5)
3 -0.59 LnQ_base_TEP_all(6)
4 -0.311 LnQ_base_AT_Survey(4)_BLK5repl_2015
5 -0.53 LnQ_base_AT_Survey(4)_BLK5repl_2020
6 -0.311 LnQ_base_AT_Survey(4)_BLK5repl_2021
7 0 LnQ_base_AT_Survey(4)_BLK5repl_2022
8 0 LnQ_base_AT_Survey(4)_BLK5repl_2023
#
 selex types 
 0 0 0 0
 0 0 0 1
 0 0 0 1
 0 0 0 0
 0 0 0 0
 0 0 0 0
 17 0 0 8
 17 0 0 8
 12 0 0 0
 17 0 0 1
 0 0 0 0
 0 0 0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 17
8 17
9 12
10 17
11 0
12 0
#Now count parameters for D-M variance of composition data; CANNOT be time-varying
 selex and composition base parameters 
1 ##  -10 11 1.00004 -1 99 0 3 0 0 0 0 0 0 0 ## AgeSel_P1_MexCal_S1(1)
2 ##  -10 11 0.837451 -1 99 0 3 0 0 0 0 0 3 2 ## AgeSel_P2_MexCal_S1(1)
3 ##  -10 15 -0.884887 -1 99 0 3 0 0 0 0 0 3 2 ## AgeSel_P3_MexCal_S1(1)
4 ##  -10 11 -0.635305 -1 99 0 3 0 0 0 0 0 3 2 ## AgeSel_P4_MexCal_S1(1)
5 ##  -10 11 0.91816 -1 99 0 3 0 0 0 0 0 3 2 ## AgeSel_P5_MexCal_S1(1)
6 ##  -10 11 -0.111484 -1 99 0 3 0 0 0 0 0 0 0 ## AgeSel_P6_MexCal_S1(1)
7 ##  -10 11 -0.989063 -1 99 0 3 0 0 0 0 0 0 0 ## AgeSel_P7_MexCal_S1(1)
8 ##  -10 11 -1.49305 -1 99 0 3 0 0 0 0 0 0 0 ## AgeSel_P8_MexCal_S1(1)
9 ##  -10 11 -1.89536 -1 99 0 3 0 0 0 0 0 0 0 ## AgeSel_P9_MexCal_S1(1)
10 ##  -10 11 1.99999 -1 99 0 -3 0 0 0 0 0 0 0 ## AgeSel_P1_MexCal_S2(2)
11 ##  -10 15 0.769735 -1 99 0 3 0 0 0 0 0 7 1 ## AgeSel_P2_MexCal_S2(2)
12 ##  -10 11 0.135819 -1 99 0 3 0 0 0 0 0 7 1 ## AgeSel_P3_MexCal_S2(2)
13 ##  -10 11 -0.104782 -1 99 0 3 0 0 0 0 0 7 1 ## AgeSel_P4_MexCal_S2(2)
14 ##  -10 11 -1.03412 -1 99 0 3 0 0 0 0 0 0 0 ## AgeSel_P5_MexCal_S2(2)
15 ##  -10 11 0.213999 -1 99 0 3 0 0 0 0 0 0 0 ## AgeSel_P6_MexCal_S2(2)
16 ##  -10 11 -1.7739 -1 99 0 3 0 0 0 0 0 0 0 ## AgeSel_P7_MexCal_S2(2)
17 ##  -10 11 -0.285435 -1 99 0 3 0 0 0 0 0 0 0 ## AgeSel_P8_MexCal_S2(2)
18 ##  -10 11 -6.97878 -1 99 0 3 0 0 0 0 0 0 0 ## AgeSel_P9_MexCal_S2(2)
19 ##  0 10 5.00095 0 99 0 4 0 0 0 0 0 4 2 ## Age_inflection_PNW(3)
20 ##  -5 15 0.483799 0 99 0 4 0 0 0 0 0 0 0 ## Age_95%width_PNW(3)
21 ##  0 9 0 -1 99 0 -3 0 0 0 0 0 0 0 ## AgeSel_P1_AT_Survey(4)
22 ##  0 11 0.000433815 -1 99 0 4 0 0 0 0 0 2 2 ## AgeSel_P2_AT_Survey(4)
identify the fleet associated with each parameter
check on conversion of retention parameter
1 sel  -10 11 1.00004 -1 99 0 3 0 0 0 0 0 0 0
2 sel  -10 11 0.837451 -1 99 0 3 0 0 0 0 0 3 2

 timevary for sel parameter: 2
baseparm:  -10 11 0.837451 -1 99 0 3 0 0 0 0 0 3 2
block pattern: 3 method 2 Nblocks: 16
 create parm for block 1
 block method 2
read timevary block parameter:  -10 11 0.837451 -1 99 0 3
 create parm for block 2
 block method 2
read timevary block parameter:  -10 11 0.837451 -1 99 0 3
 create parm for block 3
 block method 2
read timevary block parameter:  -10 11 0.837451 -1 99 0 3
 create parm for block 4
 block method 2
read timevary block parameter:  -10 11 0.837451 -1 99 0 3
 create parm for block 5
 block method 2
read timevary block parameter:  -10 11 0.837451 -1 99 0 3
 create parm for block 6
 block method 2
read timevary block parameter:  -10 11 0.837451 -1 99 0 3
 create parm for block 7
 block method 2
read timevary block parameter:  -10 11 0.837451 -1 99 0 3
 create parm for block 8
 block method 2
read timevary block parameter:  -10 11 0.837451 -1 99 0 3
 create parm for block 9
 block method 2
read timevary block parameter:  -10 11 0.837451 -1 99 0 3
 create parm for block 10
 block method 2
read timevary block parameter:  -10 11 0.837451 -1 99 0 3
 create parm for block 11
 block method 2
read timevary block parameter:  -10 11 0.837451 -1 99 0 3
 create parm for block 12
 block method 2
read timevary block parameter:  -10 11 0.837451 -1 99 0 3
 create parm for block 13
 block method 2
read timevary block parameter:  -10 11 0.837451 -1 99 0 3
 create parm for block 14
 block method 2
read timevary block parameter:  -10 11 0.837451 -1 99 0 3
 create parm for block 15
 block method 2
read timevary block parameter:  -10 11 0.837451 -1 99 0 3
 create parm for block 16
 block method 2
read timevary block parameter:  -10 11 0.837451 -1 99 0 3
timevary_setup 5 2 11 3 2 0 0 0 0 0 0 0 83 0
3 sel  -10 15 -0.884887 -1 99 0 3 0 0 0 0 0 3 2

 timevary for sel parameter: 3
baseparm:  -10 15 -0.884887 -1 99 0 3 0 0 0 0 0 3 2
block pattern: 3 method 2 Nblocks: 16
 create parm for block 1
 block method 2
read timevary block parameter:  -10 11 -0.884887 -1 99 0 3
 create parm for block 2
 block method 2
read timevary block parameter:  -10 11 -0.884887 -1 99 0 3
 create parm for block 3
 block method 2
read timevary block parameter:  -10 11 -0.884887 -1 99 0 3
 create parm for block 4
 block method 2
read timevary block parameter:  -10 11 -0.884887 -1 99 0 3
 create parm for block 5
 block method 2
read timevary block parameter:  -10 15 -0.884887 -1 99 0 3
 create parm for block 6
 block method 2
read timevary block parameter:  -10 11 -0.884887 -1 99 0 3
 create parm for block 7
 block method 2
read timevary block parameter:  -10 11 -0.884887 -1 99 0 3
 create parm for block 8
 block method 2
read timevary block parameter:  -10 11 -0.884887 -1 99 0 3
 create parm for block 9
 block method 2
read timevary block parameter:  -10 11 -0.884887 -1 99 0 3
 create parm for block 10
 block method 2
read timevary block parameter:  -10 11 -0.884887 -1 99 0 3
 create parm for block 11
 block method 2
read timevary block parameter:  -10 11 -0.884887 -1 99 0 3
 create parm for block 12
 block method 2
read timevary block parameter:  -10 11 -0.884887 -1 99 0 3
 create parm for block 13
 block method 2
read timevary block parameter:  -10 11 -0.884887 -1 99 0 3
 create parm for block 14
 block method 2
read timevary block parameter:  -10 11 -0.884887 -1 99 0 3
 create parm for block 15
 block method 2
read timevary block parameter:  -10 11 -0.884887 -1 99 0 3
 create parm for block 16
 block method 2
read timevary block parameter:  -10 11 -0.884887 -1 99 0 3
timevary_setup 5 3 27 3 2 0 0 0 0 0 0 0 84 0
4 sel  -10 11 -0.635305 -1 99 0 3 0 0 0 0 0 3 2

 timevary for sel parameter: 4
baseparm:  -10 11 -0.635305 -1 99 0 3 0 0 0 0 0 3 2
block pattern: 3 method 2 Nblocks: 16
 create parm for block 1
 block method 2
read timevary block parameter:  -10 11 -0.635305 -1 99 0 3
 create parm for block 2
 block method 2
read timevary block parameter:  -10 11 -0.635305 -1 99 0 3
 create parm for block 3
 block method 2
read timevary block parameter:  -10 11 -0.635305 -1 99 0 3
 create parm for block 4
 block method 2
read timevary block parameter:  -10 11 -0.635305 -1 99 0 3
 create parm for block 5
 block method 2
read timevary block parameter:  -10 11 -0.635305 -1 99 0 3
 create parm for block 6
 block method 2
read timevary block parameter:  -10 11 -0.635305 -1 99 0 3
 create parm for block 7
 block method 2
read timevary block parameter:  -10 11 -0.635305 -1 99 0 3
 create parm for block 8
 block method 2
read timevary block parameter:  -10 11 -0.635305 -1 99 0 3
 create parm for block 9
 block method 2
read timevary block parameter:  -10 11 -0.635305 -1 99 0 3
 create parm for block 10
 block method 2
read timevary block parameter:  -10 11 -0.635305 -1 99 0 3
 create parm for block 11
 block method 2
read timevary block parameter:  -10 11 -0.635305 -1 99 0 3
 create parm for block 12
 block method 2
read timevary block parameter:  -10 11 -0.635305 -1 99 0 3
 create parm for block 13
 block method 2
read timevary block parameter:  -10 11 -0.635305 -1 99 0 3
 create parm for block 14
 block method 2
read timevary block parameter:  -10 11 -0.635305 -1 99 0 3
 create parm for block 15
 block method 2
read timevary block parameter:  -10 11 -0.635305 -1 99 0 3
 create parm for block 16
 block method 2
read timevary block parameter:  -10 11 -0.635305 -1 99 0 3
timevary_setup 5 4 43 3 2 0 0 0 0 0 0 0 85 0
5 sel  -10 11 0.91816 -1 99 0 3 0 0 0 0 0 3 2

 timevary for sel parameter: 5
baseparm:  -10 11 0.91816 -1 99 0 3 0 0 0 0 0 3 2
block pattern: 3 method 2 Nblocks: 16
 create parm for block 1
 block method 2
read timevary block parameter:  -10 11 0.91816 -1 99 0 3
 create parm for block 2
 block method 2
read timevary block parameter:  -10 11 0.91816 -1 99 0 3
 create parm for block 3
 block method 2
read timevary block parameter:  -10 11 0.91816 -1 99 0 3
 create parm for block 4
 block method 2
read timevary block parameter:  -10 11 0.91816 -1 99 0 3
 create parm for block 5
 block method 2
read timevary block parameter:  -10 11 0.91816 -1 99 0 3
 create parm for block 6
 block method 2
read timevary block parameter:  -10 11 0.91816 -1 99 0 3
 create parm for block 7
 block method 2
read timevary block parameter:  -10 11 0.91816 -1 99 0 3
 create parm for block 8
 block method 2
read timevary block parameter:  -10 11 0.91816 -1 99 0 3
 create parm for block 9
 block method 2
read timevary block parameter:  -10 11 0.91816 -1 99 0 3
 create parm for block 10
 block method 2
read timevary block parameter:  -10 11 0.91816 -1 99 0 3
 create parm for block 11
 block method 2
read timevary block parameter:  -10 11 0.91816 -1 99 0 3
 create parm for block 12
 block method 2
read timevary block parameter:  -10 11 0.91816 -1 99 0 3
 create parm for block 13
 block method 2
read timevary block parameter:  -10 11 0.91816 -1 99 0 3
 create parm for block 14
 block method 2
read timevary block parameter:  -10 11 0.91816 -1 99 0 3
 create parm for block 15
 block method 2
read timevary block parameter:  -10 11 0.91816 -1 99 0 3
 create parm for block 16
 block method 2
read timevary block parameter:  -10 11 0.91816 -1 99 0 3
timevary_setup 5 5 59 3 2 0 0 0 0 0 0 0 86 0
6 sel  -10 11 -0.111484 -1 99 0 3 0 0 0 0 0 0 0
7 sel  -10 11 -0.989063 -1 99 0 3 0 0 0 0 0 0 0
8 sel  -10 11 -1.49305 -1 99 0 3 0 0 0 0 0 0 0
9 sel  -10 11 -1.89536 -1 99 0 3 0 0 0 0 0 0 0
10 sel  -10 11 1.99999 -1 99 0 -3 0 0 0 0 0 0 0
11 sel  -10 15 0.769735 -1 99 0 3 0 0 0 0 0 7 1

 timevary for sel parameter: 11
baseparm:  -10 15 0.769735 -1 99 0 3 0 0 0 0 0 7 1
block pattern: 7 method 1 Nblocks: 14
 create parm for block 1
 block method 1
read timevary block parameter:  -10 15 0.769735 -1 99 0 3
 create parm for block 2
 block method 1
read timevary block parameter:  -10 11 0.769735 -1 99 0 3
 create parm for block 3
 block method 1
read timevary block parameter:  -10 11 0.769735 -1 99 0 3
 create parm for block 4
 block method 1
read timevary block parameter:  -10 11 0.769735 -1 99 0 3
 create parm for block 5
 block method 1
read timevary block parameter:  -10 11 0.769735 -1 99 0 3
 create parm for block 6
 block method 1
read timevary block parameter:  -10 11 0.769735 -1 99 0 3
 create parm for block 7
 block method 1
read timevary block parameter:  -10 11 0.769735 -1 99 0 3
 create parm for block 8
 block method 1
read timevary block parameter:  -10 11 0.769735 -1 99 0 3
 create parm for block 9
 block method 1
read timevary block parameter:  -10 11 0.769735 -1 99 0 3
 create parm for block 10
 block method 1
read timevary block parameter:  -10 11 0.769735 -1 99 0 3
 create parm for block 11
 block method 1
read timevary block parameter:  -10 11 0.769735 -1 99 0 3
 create parm for block 12
 block method 1
read timevary block parameter:  -10 11 0.769735 -1 99 0 3
 create parm for block 13
 block method 1
read timevary block parameter:  -10 11 0.769735 -1 99 0 3
 create parm for block 14
 block method 1
read timevary block parameter:  -10 11 0.769735 -1 99 0 3
timevary_setup 5 11 75 7 1 0 0 0 0 0 0 0 92 0
12 sel  -10 11 0.135819 -1 99 0 3 0 0 0 0 0 7 1

 timevary for sel parameter: 12
baseparm:  -10 11 0.135819 -1 99 0 3 0 0 0 0 0 7 1
block pattern: 7 method 1 Nblocks: 14
 create parm for block 1
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 2
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 3
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 4
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 5
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 6
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 7
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 8
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 9
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 10
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 11
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 12
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 13
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 14
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
timevary_setup 5 12 89 7 1 0 0 0 0 0 0 0 93 0
13 sel  -10 11 -0.104782 -1 99 0 3 0 0 0 0 0 7 1

 timevary for sel parameter: 13
baseparm:  -10 11 -0.104782 -1 99 0 3 0 0 0 0 0 7 1
block pattern: 7 method 1 Nblocks: 14
 create parm for block 1
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 2
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 3
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 4
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 5
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 6
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 7
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 8
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 9
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 10
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 11
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 12
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 13
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
 create parm for block 14
 block method 1
read timevary block parameter:  -10 11 0.135819 -1 99 0 3
timevary_setup 5 13 103 7 1 0 0 0 0 0 0 0 94 0
14 sel  -10 11 -1.03412 -1 99 0 3 0 0 0 0 0 0 0
15 sel  -10 11 0.213999 -1 99 0 3 0 0 0 0 0 0 0
16 sel  -10 11 -1.7739 -1 99 0 3 0 0 0 0 0 0 0
17 sel  -10 11 -0.285435 -1 99 0 3 0 0 0 0 0 0 0
18 sel  -10 11 -6.97878 -1 99 0 3 0 0 0 0 0 0 0
19 sel  0 10 5.00095 0 99 0 4 0 0 0 0 0 4 2

 timevary for sel parameter: 19
baseparm:  0 10 5.00095 0 99 0 4 0 0 0 0 0 4 2
block pattern: 4 method 2 Nblocks: 8
 create parm for block 1
 block method 2
read timevary block parameter:  0 10 5.00095 0 99 0 4
 create parm for block 2
 block method 2
read timevary block parameter:  0 10 5.00095 0 99 0 4
 create parm for block 3
 block method 2
read timevary block parameter:  0 10 5.00095 0 99 0 4
 create parm for block 4
 block method 2
read timevary block parameter:  0 10 5.00095 0 99 0 4
 create parm for block 5
 block method 2
read timevary block parameter:  0 10 5.00095 0 99 0 4
 create parm for block 6
 block method 2
read timevary block parameter:  0 10 5.00095 0 99 0 4
 create parm for block 7
 block method 2
read timevary block parameter:  0 10 5.00095 0 99 0 4
 create parm for block 8
 block method 2
read timevary block parameter:  0 10 5.00095 0 99 0 4
timevary_setup 5 19 117 4 2 0 0 0 0 0 0 0 100 0
20 sel  -5 15 0.483799 0 99 0 4 0 0 0 0 0 0 0
21 sel  0 9 0 -1 99 0 -3 0 0 0 0 0 0 0
22 sel  0 11 0.000433815 -1 99 0 4 0 0 0 0 0 2 2

 timevary for sel parameter: 22
baseparm:  0 11 0.000433815 -1 99 0 4 0 0 0 0 0 2 2
block pattern: 2 method 2 Nblocks: 16
 create parm for block 1
 block method 2
read timevary block parameter:  0 9 0.000433815 -1 99 0 4
 create parm for block 2
 block method 2
read timevary block parameter:  0 9 0.000433815 -1 99 0 4
 create parm for block 3
 block method 2
read timevary block parameter:  0 9 0.000433815 -1 99 0 4
 create parm for block 4
 block method 2
read timevary block parameter:  0 9 0 -1 99 0 -4
 create parm for block 5
 block method 2
read timevary block parameter:  0 9 0.000433815 -1 99 0 4
 create parm for block 6
 block method 2
read timevary block parameter:  0 9 0 -1 99 0 -4
 create parm for block 7
 block method 2
read timevary block parameter:  0 9 0.000433815 -1 99 0 4
 create parm for block 8
 block method 2
read timevary block parameter:  0 11 0.000433815 -1 99 0 4
 create parm for block 9
 block method 2
read timevary block parameter:  0 0 -9999 1 0 1 1
 create parm for block 10
 block method 2
read timevary block parameter:  1 4 1 1 1 1 5
 create parm for block 11
 block method 2
read timevary block parameter:  1 1 1 1 6 1 1
 create parm for block 12
 block method 2
read timevary block parameter:  1 5 1 1 1 1 5
 create parm for block 13
 block method 2
read timevary block parameter:  2 1 1 1 5 3 1
 create parm for block 14
 block method 2
read timevary block parameter:  1 1 5 4 1 1 1
 create parm for block 15
 block method 2
read timevary block parameter:  9 1 1 0 1 9 2
 create parm for block 16
 block method 2
read timevary block parameter:  1 0 1 9 3 1 0
timevary_setup 5 22 125 2 2 0 0 0 0 0 0 0 103 0
 now read 0/1 for 2D_AR
1  #_ 0/1 to request experimental 2D_AR selectivity smoother options  
read specification for first 2D_AR1:  fleet, ymin, ymax, amin, amax, sigma_amax, use_rho, len1/age2
 18 1 1 0 1 18 2 1 0 1 18
